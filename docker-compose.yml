services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_STRAPI_API_URL: http://backend:1337
      NODE_ENV: production
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build:
      context: ../seekahost.lk-cms
      dockerfile: Dockerfile
    ports:
      - "1337:1337"
    volumes:
      - ../seekahost.lk-cms/public/uploads:/app/public/uploads
    env_file:
      - ../seekahost.lk-cms/.env
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USERNAME: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:17.5
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - strapi_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  strapi_pg_data: